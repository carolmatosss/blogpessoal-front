{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\blogpessoal-front\\\\src\\\\componentes\\\\postagens\\\\cadastrarPost\\\\CadastrarPost.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, TextField, Button, Select, InputLabel, MenuItem, FormControl, FormHelperText } from \"@material-ui/core\";\nimport './CadastrarPost.css';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { busca, buscaId, post, put } from '../../../service/Service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CadastroPost() {\n  _s();\n  let navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const [temas, setTemas] = useState([]);\n  useEffect(() => {\n    if (token === \"\") {\n      alert(\"Você precisa estar logado\");\n      navigate(\"/login\");\n    }\n  }, [token]);\n  const [tema, setTema] = useState({\n    id: 0,\n    descricao: ''\n  });\n  const [postagem, setPostagem] = useState({\n    id: 0,\n    titulo: '',\n    texto: '',\n    data: '',\n    tema: null\n  });\n  useEffect(() => {\n    setPostagem({\n      ...postagem,\n      tema: tema\n    });\n  }, [tema]);\n  useEffect(() => {\n    getTemas();\n    if (id !== undefined) {\n      findByIdPostagem(id);\n    }\n  }, [id]);\n  async function getTemas() {\n    await busca(\"/temas\", setTemas, {\n      headers: {\n        'Authorization': token\n      }\n    });\n  }\n  async function findByIdPostagem(id) {\n    await buscaId(`postagens/${id}`, setPostagem, {\n      headers: {\n        'Authorization': token\n      }\n    });\n  }\n  function updatedPostagem(e) {\n    setPostagem({\n      ...postagem,\n      [e.target.name]: e.target.value,\n      tema: tema\n    });\n  }\n  async function onSubmit(e) {\n    e.preventDefault();\n    if (id !== undefined) {\n      put(`/postagens`, postagem, setPostagem, {\n        headers: {\n          'Authorization': token\n        }\n      });\n      alert(\"Postagem atualizada com sucesso\");\n    } else {\n      post(`/postagens`, postagem, setPostagem, {\n        headers: {\n          'Authorization': token\n        }\n      });\n      alert(\"Postagem cadastrada com sucesso\");\n    }\n    back();\n  }\n  function back() {\n    navigate('/postagens');\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    className: \"topo\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        color: \"textSecondary\",\n        component: \"h1\",\n        align: \"center\",\n        children: \"Formul\\xE1rio de cadastro postagem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: postagem.titulo,\n        onChange: e => updatedPostagem(e),\n        id: \"titulo\",\n        label: \"titulo\",\n        variant: \"outlined\",\n        name: \"titulo\",\n        margin: \"normal\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: postagem.texto,\n        onChange: e => updatedPostagem(e),\n        id: \"texto\",\n        label: \"texto\",\n        name: \"texto\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-helper-label\",\n          children: \"Tema \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-simple-select-helper-label\",\n          id: \"demo-simple-select-helper\",\n          onChange: e => buscaId(`/temas/${e.target.value}`, setTema, {\n            headers: {\n              'Authorization': token\n            }\n          }),\n          children: temas.map(tema => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: tema.id,\n            children: tema.descricao\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 48\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n          children: \"Escolha um tema para a postagem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Finalizar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n_s(CadastroPost, \"X3WihbVpcvSn/A5N5sYRE+6fLDM=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = CadastroPost;\nexport default CadastroPost;\nvar _c;\n$RefreshReg$(_c, \"CadastroPost\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","TextField","Button","Select","InputLabel","MenuItem","FormControl","FormHelperText","useNavigate","useParams","busca","buscaId","post","put","CadastroPost","navigate","id","temas","setTemas","token","alert","tema","setTema","descricao","postagem","setPostagem","titulo","texto","data","getTemas","undefined","findByIdPostagem","headers","updatedPostagem","e","target","name","value","onSubmit","preventDefault","back","map"],"sources":["C:/Users/User/Desktop/blogpessoal-front/src/componentes/postagens/cadastrarPost/CadastrarPost.tsx"],"sourcesContent":["import React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport { Container, Typography, TextField, Button, Select, InputLabel, MenuItem, FormControl, FormHelperText } from \"@material-ui/core\"\r\nimport './CadastrarPost.css';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport Tema from '../../../models/Tema';\r\n\r\nimport Postagem from '../../../models/Postagem';\r\nimport { busca, buscaId, post, put } from '../../../service/Service';\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/TokensReduce';\r\n\r\nfunction CadastroPost() {\r\n    let navigate = useNavigate();\r\n    const {id}= useParams<{id: string}>();\r\n    \r\n    const [temas, setTemas] = useState<Tema[]>([])\r\n    \r\n    useEffect(() => {\r\n        if (token === \"\") {\r\n          alert(\"Você precisa estar logado\");\r\n          navigate(\"/login\");\r\n        }\r\n      }, [token]);\r\n\r\n  \r\n      const [tema, setTema] = useState<Tema>({\r\n          id: 0,\r\n          descricao: ''\r\n      })\r\n\r\n  const [postagem, setPostagem]= useState<Postagem>({\r\nid: 0,\r\ntitulo:'',\r\ntexto: '',\r\ndata:'',\r\ntema: null\r\n  })\r\n  \r\n  useEffect(() =>{\r\n    setPostagem({\r\n        ...postagem,\r\n        tema: tema\r\n    })\r\n  }, [tema])\r\n    \r\n  useEffect(()=>{\r\n    getTemas()\r\n    if(id !== undefined){\r\n        findByIdPostagem(id)\r\n    }\r\n}, [id])\r\n  \r\nasync function getTemas() {\r\n    await busca(\"/temas\", setTemas,{\r\n        headers:{\r\n            'Authorization':token\r\n        }\r\n    })\r\n    \r\n}\r\n\r\nasync function findByIdPostagem(id:string) {\r\n    await buscaId(`postagens/${id}`, setPostagem, {\r\n        headers:{\r\n            'Authorization':token\r\n        }\r\n    })\r\n}\r\n\r\nfunction updatedPostagem (e:ChangeEvent<HTMLInputElement>){\r\n    setPostagem({\r\n        ...postagem,\r\n        [e.target.name]: e.target.value,\r\n        tema: tema\r\n    })\r\n}\r\n\r\nasync function onSubmit(e: ChangeEvent<HTMLFormElement>){\r\n    e.preventDefault()\r\n    if(id !== undefined){\r\n        put(`/postagens`, postagem, setPostagem, {\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n\r\n        })\r\n        alert(\"Postagem atualizada com sucesso\");\r\n    }else{\r\n        post(`/postagens`, postagem, setPostagem,{\r\n            headers:{\r\n                'Authorization': token\r\n            }\r\n        })\r\n        alert(\"Postagem cadastrada com sucesso\")\r\n    }\r\n\r\n    back()\r\n    \r\n}\r\n\r\nfunction back(){\r\n    navigate('/postagens')\r\n}\r\n    return (\r\n        <Container maxWidth=\"sm\" className=\"topo\">\r\n            <form onSubmit={onSubmit} >\r\n                <Typography variant=\"h3\" color=\"textSecondary\" component=\"h1\" align=\"center\" >Formulário de cadastro postagem</Typography>\r\n                <TextField value={postagem.titulo}  onChange={(e:ChangeEvent<HTMLInputElement>)=> updatedPostagem(e)} id=\"titulo\" label=\"titulo\" variant=\"outlined\" name=\"titulo\" margin=\"normal\" fullWidth />\r\n                <TextField value={postagem.texto}  onChange={(e:ChangeEvent<HTMLInputElement>)=> updatedPostagem(e)} id=\"texto\" label=\"texto\" name=\"texto\" variant=\"outlined\" margin=\"normal\" fullWidth />\r\n\r\n                <FormControl >\r\n                    <InputLabel id=\"demo-simple-select-helper-label\">Tema </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        id=\"demo-simple-select-helper\"\r\n                        onChange={(e)=> buscaId(`/temas/${e.target.value}`,setTema,{\r\n                            headers:{\r\n                                'Authorization':token\r\n                            }\r\n                        })}>\r\n                            {\r\n                             temas.map(tema =>(<MenuItem value={tema.id}>{tema.descricao}</MenuItem>))\r\n                            }\r\n                    </Select>\r\n                    <FormHelperText>Escolha um tema para a postagem</FormHelperText>\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Finalizar\r\n                    </Button>\r\n                </FormControl>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\nexport default CadastroPost;"],"mappings":"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"},"metadata":{},"sourceType":"module"}