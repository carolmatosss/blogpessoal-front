{"ast":null,"code":"import { useState, useEffect, useCallback } from 'react';\nfunction useLocalStorage(key, initialValue) {\n  if (initialValue === void 0) {\n    initialValue = '';\n  }\n  var _useState = useState(function () {\n      return window.localStorage.getItem(key) || initialValue;\n    }),\n    value = _useState[0],\n    setValue = _useState[1];\n  var setItem = function setItem(newValue) {\n    setValue(newValue);\n    window.localStorage.setItem(key, newValue);\n  };\n  useEffect(function () {\n    var newValue = window.localStorage.getItem(key);\n    if (value !== newValue) {\n      setValue(newValue || initialValue);\n    }\n  });\n  var handleStorage = useCallback(function (event) {\n    if (event.key === key && event.newValue !== value) {\n      setValue(event.newValue || initialValue);\n    }\n  }, [value]);\n  useEffect(function () {\n    window.addEventListener('storage', handleStorage);\n    return function () {\n      return window.removeEventListener('storage', handleStorage);\n    };\n  }, [handleStorage]);\n  return [value, setItem];\n}\nexport default useLocalStorage;","map":{"version":3,"mappings":";SAEwBA,gBACtBC,KACAC;MAAAA;IAAAA,eAAuB;;kBAEGC,QAAQ,CAChC;MAAA,OAAMC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BL,GAA5B,KAAoCC,YAA1C;IAAA,CADgC;IAA3BK;IAAOC;EAId,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,QAAD;IACdF,QAAQ,CAACE,QAAD,CAAR;IACAN,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4BR,GAA5B,EAAiCS,QAAjC;EACD,CAHD;EAKAC,SAAS,CAAC;IACR,IAAMD,QAAQ,GAAGN,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BL,GAA5B,CAAjB;IACA,IAAIM,KAAK,KAAKG,QAAd,EAAwB;MACtBF,QAAQ,CAACE,QAAQ,IAAIR,YAAb,CAAR;IACD;EACF,CALQ,CAAT;EAOA,IAAMU,aAAa,GAAGC,WAAW,CAC/B,UAACC,KAAD;IACE,IAAIA,KAAK,CAACb,GAAN,KAAcA,GAAd,IAAqBa,KAAK,CAACJ,QAAN,KAAmBH,KAA5C,EAAmD;MACjDC,QAAQ,CAACM,KAAK,CAACJ,QAAN,IAAkBR,YAAnB,CAAR;IACD;EACF,CAL8B,EAM/B,CAACK,KAAD,CAN+B,CAAjC;EASAI,SAAS,CAAC;IACRP,MAAM,CAACW,gBAAP,CAAwB,SAAxB,EAAmCH,aAAnC;IACA,OAAO;MAAA,OAAMR,MAAM,CAACY,mBAAP,CAA2B,SAA3B,EAAsCJ,aAAtC,CAAN;IAAA,CAAP;EACD,CAHQ,EAGN,CAACA,aAAD,CAHM,CAAT;EAKA,OAAO,CAACL,KAAD,EAAQE,OAAR,CAAP;AACD","names":["useLocalStorage","key","initialValue","useState","window","localStorage","getItem","value","setValue","setItem","newValue","useEffect","handleStorage","useCallback","event","addEventListener","removeEventListener"],"sources":["C:\\Users\\User\\Desktop\\blogpessoal-front\\node_modules\\react-use-localstorage\\src\\index.ts"],"sourcesContent":["import { Dispatch, useCallback, useEffect, useState } from 'react';\n\nexport default function useLocalStorage(\n  key: string,\n  initialValue: string = ''\n): [string, Dispatch<string>] {\n  const [value, setValue] = useState(\n    () => window.localStorage.getItem(key) || initialValue\n  );\n\n  const setItem = (newValue: string) => {\n    setValue(newValue);\n    window.localStorage.setItem(key, newValue);\n  };\n\n  useEffect(() => {\n    const newValue = window.localStorage.getItem(key);\n    if (value !== newValue) {\n      setValue(newValue || initialValue);\n    }\n  });\n\n  const handleStorage = useCallback(\n    (event: StorageEvent) => {\n      if (event.key === key && event.newValue !== value) {\n        setValue(event.newValue || initialValue);\n      }\n    },\n    [value]\n  );\n\n  useEffect(() => {\n    window.addEventListener('storage', handleStorage);\n    return () => window.removeEventListener('storage', handleStorage);\n  }, [handleStorage]);\n\n  return [value, setItem];\n}\n"]},"metadata":{},"sourceType":"module"}